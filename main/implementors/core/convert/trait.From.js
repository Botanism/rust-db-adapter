(function() {var implementors = {};
implementors["db_adapter"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.GuildId.html\" title=\"struct serenity::model::id::GuildId\">GuildId</a>&gt; for <a class=\"struct\" href=\"db_adapter/guild/struct.GuildConfig.html\" title=\"struct db_adapter::guild::GuildConfig\">GuildConfig</a>","synthetic":false,"types":["db_adapter::guild::GuildConfig"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"enum\" href=\"db_adapter/slap/enum.Enforcer.html\" title=\"enum db_adapter::slap::Enforcer\">Enforcer</a>","synthetic":false,"types":["db_adapter::slap::Enforcer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.GuildId.html\" title=\"struct serenity::model::id::GuildId\">GuildId</a>, <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.UserId.html\" title=\"struct serenity::model::id::UserId\">UserId</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"db_adapter/slap/struct.MemberSlapRecord.html\" title=\"struct db_adapter::slap::MemberSlapRecord\">MemberSlapRecord</a>","synthetic":false,"types":["db_adapter::slap::MemberSlapRecord"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"struct\" href=\"db_adapter/slap/struct.GuildSlapRecord.html\" title=\"struct db_adapter::slap::GuildSlapRecord\">GuildSlapRecord</a>, <a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.UserId.html\" title=\"struct serenity::model::id::UserId\">UserId</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"db_adapter/slap/struct.MemberSlapRecord.html\" title=\"struct db_adapter::slap::MemberSlapRecord\">MemberSlapRecord</a>","synthetic":false,"types":["db_adapter::slap::MemberSlapRecord"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serenity/*/serenity/model/id/struct.GuildId.html\" title=\"struct serenity::model::id::GuildId\">GuildId</a>&gt; for <a class=\"struct\" href=\"db_adapter/slap/struct.GuildSlapRecord.html\" title=\"struct db_adapter::slap::GuildSlapRecord\">GuildSlapRecord</a>","synthetic":false,"types":["db_adapter::slap::GuildSlapRecord"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"db_adapter/enum.AdapterError.html\" title=\"enum db_adapter::AdapterError\">AdapterError</a>","synthetic":false,"types":["db_adapter::AdapterError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"db_adapter/guild/enum.GuildConfigError.html\" title=\"enum db_adapter::guild::GuildConfigError\">GuildConfigError</a>&gt; for <a class=\"enum\" href=\"db_adapter/enum.AdapterError.html\" title=\"enum db_adapter::AdapterError\">AdapterError</a>","synthetic":false,"types":["db_adapter::AdapterError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()